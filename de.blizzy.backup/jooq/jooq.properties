#Configure the database connection here
jdbc.Driver=org.h2.Driver
jdbc.URL=jdbc:h2:G:\\blizzysbackup\\$blizzysbackup/backup
jdbc.Schema=PUBLIC
jdbc.User=sa
jdbc.Password=

#The default code generator. You can override this one, to generate your own code style
#Defaults to org.jooq.util.DefaultGenerator
generator=org.jooq.util.DefaultGenerator

#The database type. The format here is:
#generator.database=org.util.[database].[database]Database
generator.database=org.jooq.util.h2.H2Database

#All elements that are generated from your schema (several Java regular expressions, separated by comma)
#Watch out for case-sensitivity. Depending on your database, this might be important!
generator.database.includes=.*

#All elements that are excluded from your schema (several Java regular expressions, separated by comma). Excludes match before includes
generator.database.excludes=

#Primary key / foreign key relations should be generated and used. 
#This will be a prerequisite for various advanced features
#Defaults to false
generator.generate.relations=true

#Generate deprecated code for backwards compatibility 
#Defaults to true
generator.generate.deprecated=false

generator.generate.generated-annotation=false

#The destination package of your generated classes (within the destination directory)
generator.target.package=de.blizzy.backup.database.schema

#The destination directory of your generated classes
generator.target.directory=D:\\bZ\\git_working\\blizzys-backup\\de.blizzy.backup\\src
